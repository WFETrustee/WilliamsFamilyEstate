name: Deploy Active Content to Public Branch

defaults:
  run:
    shell: bash

permissions:
  contents: write

on:
  repository_dispatch:
    types: [deploy-public]
  workflow_dispatch:

jobs:
  publish-public-content:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean and create public folder
        run: |
          rm -rf public
          mkdir public

      - name: Copy static site assets (non-HTML)
        run: |
          find . -type f \( \
            -name '*.css' -o \
            -name '*.js' -o \
            -name '*.json' -o \
            -name '*.txt' -o \
            -name 'CNAME' \
          \) ! -path './.git/*' ! -path './.github/*' | while read filepath; do
            dir=$(dirname "$filepath")
            mkdir -p "public/$dir"
            cp "$filepath" "public/$filepath"
            echo "✓ Copied static asset: $filepath"
          done

      - name: Copy valid HTML content and matching PDFs
        run: |
          for file in $(find . -type f -name '*.html' ! -path './.git/*' ! -path './.github/*'); do
            status=$(grep -i '<meta[^>]*name=["'"'"']doc-status["'"'"']' "$file" \
                     | sed -nE 's/.*content=["'"'"']([^"'"'"']+)["'"'"'].*/\1/p' \
                     | tr '[:upper:]' '[:lower:]')

            if [[ "$status" == "active" || "$status" == "draft" ]]; then
              echo "✓ Including HTML: $file (status: $status)"
              dir=$(dirname "$file")
              mkdir -p "public/$dir"
              cp "$file" "public/$file"

              pdf="${file%.html}.pdf"
              if [[ -f "$pdf" ]]; then
                cp "$pdf" "public/$pdf"
                echo "  └─ Included PDF: $pdf"
              fi
            else
              echo "✗ Skipping HTML: $file (status: $status)"
            fi
          done

      - name: Abort if public folder is empty
        run: |
          if [ ! "$(ls -A public)" ]; then
            echo "No eligible content to publish. Aborting deployment."
            exit 1
          fi

      - name: Switch to public branch and clean old content
        run: |
          git fetch origin public:public || true
          git checkout public || git checkout -b public
          git rm -rf . || true
          git clean -fdx

      - name: Copy generated content to public branch root
        run: |
          cp -r public/* ./
          rm -rf public

      - name: Log deployed files
        run: |
          echo "Deployed content includes:"
          find . -type f ! -path './.git/*' ! -path './.github/*'

      - name: Configure Git identity
        run: |
          git config user.name "WFE Bot"
          git config user.email "trustee@williamsfamilyestate.org"

      - name: Commit and push to public branch
        run: |
          git add .
          git commit -m "Deploy active content to public branch" || echo "No changes to commit"
          git push origin HEAD:public --force
